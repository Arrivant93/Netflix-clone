// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  accounts      Account[]
  watchlist     Watchlist[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Commentaire {
  id      String @id @default(cuid())
  content String
  rating  String
  userId  String
  animeId String
  Anime   Anime  @relation(fields: [animeId], references: [id])
}

model Anime {
  id          String        @id @default(cuid())
  title       String
  Description String
  rating      String
  releaseDate Int
  image       String
  malId       String
  Commentaire Commentaire[]
  Watchlist   Watchlist?    @relation(fields: [watchlistId], references: [id])
  watchlistId String?
}

model Watchlist {
  id      String  @id @default(cuid())
  userId  String
  User    User    @relation(fields: [userId], references: [id])
  Animes  Anime[]
}
